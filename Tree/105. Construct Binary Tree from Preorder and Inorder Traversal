/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int prelength=preorder.size();
        int inlength=inorder.size();
        return helper(preorder,0,prelength-1,inorder,0,inlength-1);
    }
    TreeNode* helper(vector<int>&preorder,int preStart,int preEnd,vector<int>&inorder,int inStart,int inEnd)
    {
        if(preStart>preEnd||inStart>inEnd)
        {
            return NULL;
        }
        int rootVal=preorder[preStart];
        int rootIndex=0;
        for(int i=inStart;i<=inEnd;i++)
        {
            if(inorder[i]==rootVal)
            {
                rootIndex=i;
                break; 
            }
        }
        int len=rootIndex-inStart;
        TreeNode *root=new TreeNode(rootVal);
        root->left=helper(preorder,preStart+1,preStart+len,inorder,inStart,rootIndex-1);
        root->right=helper(preorder,preStart+len+1,preEnd,inorder,rootIndex+1,inEnd);
        return root;
    }
};
